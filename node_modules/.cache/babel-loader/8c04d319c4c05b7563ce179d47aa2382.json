{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { auth } from '../firebase/config';\n\nconst useSignup = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n\n  const signup = async (email, password, displayName) => {\n    setError(null); //^ reset the error each time we signup\n\n    setIsPending(true);\n\n    try {\n      const res = await auth.createUserWithEmailAndPassword(email, password);\n      console.log(res);\n      console.log(res.user);\n\n      if (!res) {\n        throw new Error('Failed to create a user');\n      } //! after creating the user we want to tap in that user and update his profile and add this name\n\n\n      await res.user.updateProfile({\n        displayName\n      });\n      setIsPending(false);\n    } catch (error) {\n      console.log(error);\n      setError(err.message);\n      setIsPending(false);\n    }\n  };\n\n  return {\n    error,\n    isPending,\n    signup\n  };\n};\n\n_s(useSignup, \"VWMFfmtcnK1BWPKGu8S04OaXgzE=\");\n\nexport default useSignup;","map":{"version":3,"sources":["/Users/abdomostafa/Finance-Tracker/frontend/src/hooks/useSignup.js"],"names":["useState","auth","useSignup","error","setError","isPending","setIsPending","signup","email","password","displayName","res","createUserWithEmailAndPassword","console","log","user","Error","updateProfile","err","message"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAQC,IAAR,QAAmB,oBAAnB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAM,CAACK,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,KAAD,CAAzC;;AAEA,QAAMO,MAAM,GAAG,OAAOC,KAAP,EAAaC,QAAb,EAAsBC,WAAtB,KAAsC;AACjDN,IAAAA,QAAQ,CAAC,IAAD,CAAR,CADiD,CAClC;;AACfE,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACA,YAAMK,GAAG,GAAG,MAAMV,IAAI,CAACW,8BAAL,CAAoCJ,KAApC,EAA0CC,QAA1C,CAAlB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;;AAEA,UAAG,CAACJ,GAAJ,EAAQ;AACJ,cAAM,IAAIK,KAAJ,CAAU,yBAAV,CAAN;AACH,OAPD,CAQA;;;AACA,YAAML,GAAG,CAACI,IAAJ,CAASE,aAAT,CAAuB;AAAEP,QAAAA;AAAF,OAAvB,CAAN;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,KAZD,CAYE,OAAOH,KAAP,EAAc;AACZU,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACAC,MAAAA,QAAQ,CAACc,GAAG,CAACC,OAAL,CAAR;AACAb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH;AAEJ,GAvBD;;AAwBH,SAAO;AAACH,IAAAA,KAAD;AAAOE,IAAAA,SAAP;AAAiBE,IAAAA;AAAjB,GAAP;AACA,CA7BD;;GAAML,S;;AA+BN,eAAeA,SAAf","sourcesContent":["import { useState } from 'react'\nimport {auth} from '../firebase/config'\n\nconst useSignup = () => {\n    const [error,setError] = useState(null)\n    const [isPending,setIsPending] = useState(false)\n \n    const signup = async (email,password,displayName) => {\n        setError(null) //^ reset the error each time we signup\n        setIsPending(true)\n        \n        try {\n            const res = await auth.createUserWithEmailAndPassword(email,password) \n            console.log(res)\n            console.log(res.user)\n            \n            if(!res){\n                throw new Error('Failed to create a user')\n            }\n            //! after creating the user we want to tap in that user and update his profile and add this name\n            await res.user.updateProfile({ displayName })\n            setIsPending(false)\n            \n        } catch (error) {\n            console.log(error)\n            setError(err.message)\n            setIsPending(false)\n\n        }\n        \n    }\n return {error,isPending,signup}\n}\n\nexport default useSignup"]},"metadata":{},"sourceType":"module"}