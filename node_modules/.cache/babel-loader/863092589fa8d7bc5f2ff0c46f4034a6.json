{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { db } from '../firebase/config';\n\nconst useCollection = (collection, _query, _orderBy) => {\n  _s();\n\n  const [documents, setDocuments] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let currentCollection = db.collection(collection);\n    const unsubscribe = currentCollection.onSnapshot(snapshot => {\n      let results = [];\n      snapshot.docs.forEach(doc => {\n        results.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      }); // update state\n\n      setDocuments(results);\n      setError(null);\n    }, error => {\n      console.log(error);\n      setError('could not fetch the data');\n    }); //* unsubscribe on unmount\n\n    return () => unsubscribe();\n  }, [collection]);\n  return {\n    documents,\n    error\n  };\n};\n\n_s(useCollection, \"m/oJjmWTWKkmvrL6yTbJ853+VYo=\");\n\nexport default useCollection;","map":{"version":3,"sources":["/Users/abdomostafa/Finance-Tracker/frontend/src/hooks/useCollection.js"],"names":["useEffect","useState","useRef","db","useCollection","collection","_query","_orderBy","documents","setDocuments","error","setError","currentCollection","unsubscribe","onSnapshot","snapshot","results","docs","forEach","doc","push","id","data","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAAQC,EAAR,QAAiB,oBAAjB;;AAGA,MAAMC,aAAa,GAAG,CAACC,UAAD,EAAaC,MAAb,EAAqBC,QAArB,KAAkC;AAAA;;AACpD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,iBAAiB,GAAGT,EAAE,CAACE,UAAH,CAAcA,UAAd,CAAxB;AAGA,UAAMQ,WAAW,GAAGD,iBAAiB,CAACE,UAAlB,CAA8BC,QAAD,IAAc;AAC7D,UAAIC,OAAO,GAAG,EAAd;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,GAAG,IAAI;AAC3BH,QAAAA,OAAO,CAACI,IAAR,CAAa;AAACC,UAAAA,EAAE,EAAEF,GAAG,CAACE,EAAT;AAAa,aAAGF,GAAG,CAACG,IAAJ;AAAhB,SAAb;AACD,OAFD,EAF6D,CAK7D;;AACAb,MAAAA,YAAY,CAACO,OAAD,CAAZ;AACAL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KARmB,EAQhBD,KAAD,IAAW;AACVa,MAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAC,MAAAA,QAAQ,CAAC,0BAAD,CAAR;AACH,KAXmB,CAApB,CAJY,CAiBZ;;AACA,WAAO,MAAME,WAAW,EAAxB;AACH,GAnBQ,EAmBP,CAACR,UAAD,CAnBO,CAAT;AAsBA,SAAO;AAAEG,IAAAA,SAAF;AAAaE,IAAAA;AAAb,GAAP;AACH,CA5BD;;GAAMN,a;;AA8BN,eAAeA,aAAf","sourcesContent":["import { useEffect, useState, useRef } from \"react\"\nimport {db} from '../firebase/config'\n\n\nconst useCollection = (collection, _query, _orderBy) => {\n    const [documents, setDocuments] = useState([])\n    const [error, setError] = useState(null)\n    \n \n    useEffect(() => {\n        let currentCollection = db.collection(collection)\n    \n\n        const unsubscribe = currentCollection.onSnapshot((snapshot) => {\n          let results = []\n          snapshot.docs.forEach(doc => {\n            results.push({id: doc.id, ...doc.data()})\n          });\n          // update state\n          setDocuments(results)\n          setError(null)\n        }, (error) => {\n            console.log(error)\n            setError('could not fetch the data')\n        })\n          \n        //* unsubscribe on unmount\n        return () => unsubscribe()\n    },[collection])\n    \n    \n    return { documents, error }\n}\n\nexport default useCollection"]},"metadata":{},"sourceType":"module"}